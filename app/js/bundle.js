(()=>{"use strict";var __webpack_modules__={"./app/js/index.js":
/*!*************************!*\
  !*** ./app/js/index.js ***!
  \*************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/Helpers */ \"./app/js/modules/Helpers.js\");\n// Importing Helpers\n\n// Getting Methods from Helpers\nconst { getNode, getNodes, addClass, removeClass, nextNode } = new _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__.NodeHelper();\nconst { imgLoadHelper } = new _modules_Helpers__WEBPACK_IMPORTED_MODULE_0__.FuncsHelper();\n\n// Invoking Functions from Helper\n\nfunction problemAnimate() {\n  if (getNode('.problem')) {\n    let tl = gsap.timeline();\n    const duration = 0.3;\n    tl.fromTo('.problem-dots1', duration, { opacity: 0 }, { opacity: 1 }, 1)\n      .fromTo('.problem-text .bg', duration, { width: 0 }, { width: '100%' })\n      .fromTo('.problem-text .text', duration, { opacity: 0 }, { opacity: 1 })\n      .fromTo('.problem-dots2', duration, { opacity: 0 }, { opacity: 1 }, `-=${duration}`)\n      .fromTo('.problem-plus', duration, { opacity: 0 }, { opacity: 1 })\n      .fromTo(\n        '.problem-plus',\n        duration,\n        { transform: 'rotate(-90deg)' },\n        { transform: 'rotate(0deg)' },\n      )\n      .fromTo('.problem-line .first', duration, { x: '-100%' }, { x: '0' })\n      .fromTo('.problem-line .second', duration, { x: '-100%' }, { x: '0' }, '-=0.25')\n      .fromTo('.problem-category__item .bg', duration, { width: 0 }, { width: '100%' })\n      .fromTo('.problem-category__later', duration, { opacity: 0 }, { opacity: 1 })\n      .fromTo('.problem-category__text', duration, { opacity: 0 }, { opacity: 1 }, `-=${duration}`)\n      .to('.problem-text .bg', duration, { width: '0' })\n      .to('.problem-category__item .bg', duration, { width: '0' }, `-=${duration}`);\n  }\n}\n\nfunction solutionAnimate() {\n  let solution = getNode('.solution');\n  const duration = 0.3;\n  if (solution) {\n    let tl = gsap.timeline();\n    tl.fromTo('.vertical-line', 1, { y: '-100%' }, { y: 0 }, 2)\n      .fromTo('.horizantal-line', duration, { opacity: 0 }, { opacity: 1 }, 2.5)\n      .fromTo('.line-side', duration, { y: '-100%' }, { y: 0 })\n      .fromTo('.line-side2', duration, { y: '-100%' }, { y: 0 })\n      .fromTo('.left-line', duration, { x: '-101%' }, { x: '-25%' })\n      .fromTo('.right-line', duration, { x: '101%' }, { x: '25%' }, `-=${duration}`);\n    function mouseEnterSolutionBtn() {\n      let tl = gsap.timeline();\n      tl.to('.left-line', duration, { x: '-10%' }).to(\n        '.right-line',\n        duration,\n        { x: '10%' },\n        `-=${duration}`,\n      );\n    }\n\n    function mouseOutSolutionBtn() {\n      let tl = gsap.timeline();\n      tl.to('.left-line', duration, { x: '-25%' }).to(\n        '.right-line',\n        duration,\n        { x: '25%' },\n        `-=${duration}`,\n      );\n    }\n    let solutionBtn = getNode('.solution .section-btn');\n\n    solutionBtn.addEventListener('mouseenter', mouseEnterSolutionBtn);\n    solutionBtn.addEventListener('mouseout', mouseOutSolutionBtn);\n  }\n}\n\nfunction benefitsAnimation() {\n  let benefitsNode = getNode('.benefits');\n  const duration = 0.5;\n  if (benefitsNode) {\n    let tl = gsap.timeline();\n    tl.fromTo('.bg__white', 0.5, { width: 0 }, { width: '100%' }, 3)\n      .fromTo('.benefits-item__text-show', 0.5, { left: '80px' }, { left: '-100%' })\n      .fromTo('.benefits-item__text-hidden', 0.3, { opacity: 0 }, { opacity: 1 }, '-=0.5')\n      .to('.bg__white', duration, { width: 0 });\n  }\n}\n\nfunction contactAnimation() {\n  let contactNode = getNode('.contact');\n  if (contactNode) {\n    let tl = gsap.timeline();\n    if (window.innerWidth <= 1024) {\n      tl.fromTo('.bg_hidden', 0.5, { x: 0 }, { x: '-2000px' }, 1)\n        .fromTo('.map-address', 1, { top: '100%' }, { top: '50%' })\n        .fromTo('.map-address p', 1, { opacity: 0 }, { opacity: 1 })\n        .fromTo('.contact .home-content', 1, { opacity: 0 }, { opacity: 1 }, '-=1');\n    } else {\n      tl.fromTo('.bg_hidden', 0.5, { x: 0 }, { x: '-2000px' }, 1)\n        .fromTo('.map-address', 1, { left: '-100%' }, { left: '50px' })\n        .fromTo('.map-address p', 1, { opacity: 0 }, { opacity: 1 })\n        .fromTo('.contact .home-content', 1, { opacity: 0 }, { opacity: 1 }, '-=1');\n    }\n  }\n}\n\nfunction aboutSlider() {\n  if (getNode('.about__swiper-img')) {\n    let aboutSwiperImg = new Swiper('.about__swiper-img', {\n      // parallax: true,\n      speed: 1000,\n    });\n    let aboutSwiperText = new Swiper('.about__swiper-text', {\n      simulateTouch: false,\n      allowTouchMove: false,\n\n      // spaceBetween: 100,\n      speed: 800,\n      autoplay: {\n        delay: 10000,\n        disableOnInteraction: false,\n      },\n      draggable: false,\n      pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n      },\n    });\n    aboutSwiperImg.on('slideChange', function (e) {\n      let tl = gsap.timeline();\n      tl.fromTo(\n        '.test',\n        0.5,\n        { width: '0%' },\n        {\n          width: '100%',\n        },\n      );\n      tl.to(\n        '.test',\n        0.8,\n        {\n          width: '0',\n        },\n        1.4,\n      );\n    });\n\n    aboutSwiperImg.controller.control = aboutSwiperText;\n    aboutSwiperText.controller.control = aboutSwiperImg;\n    /* ------------- last --------------- */\n  }\n}\n\nfunction agreementSlider() {\n  if (getNode('.agreement')) {\n    let agreementSwiperText = new Swiper('.agreement__swiper-text', {\n      slidesPerView: 1,\n      // spaceBetween: 30,\n      mousewheel: true,\n      speed: 1000,\n      simulateTouch: false,\n      allowTouchMove: false,\n      // parallax: true,\n      pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n      },\n      autoplay: {\n        delay: 10000,\n        disableOnInteraction: false,\n      },\n    });\n    let agreementSwiperImg = new Swiper('.agreement__swiper-img', {\n      // spaceBetween: 300,\n    });\n\n    agreementSwiperImg.controller.control = agreementSwiperText;\n    agreementSwiperText.controller.control = agreementSwiperImg;\n\n    agreementSwiperText.on('slideChange', function (e) {\n      let tl = gsap.timeline();\n      tl.fromTo(\n        '.agreement__swiper-img .bg-white',\n        0.5,\n        { width: '0%' },\n        {\n          width: '100%',\n        },\n      )\n        .to(\n          '.agreement__swiper-img .bg-white',\n          0.8,\n          {\n            width: '0',\n          },\n          1.4,\n        )\n        .fromTo(\n          '.agreement-descrition__text .bg',\n          1.3,\n          {\n            width: '0',\n          },\n          { width: '50%' },\n          1.3,\n        );\n    });\n\n    //   tl.fromTo(\n    //     \".agreement_test\",\n    //     1.3,\n    //     {\n    //       width: \"100%\",\n    //     },\n    //     { width: \"0\" },\n    //     \"1.3\"\n    //   ).fromTo(\n    //     \".agreement-descrition__text .bg\",\n    //     1.3,\n    //     {\n    //       width: \"0\",\n    //     },\n    //     { width: \"50%\" },\n    //     1.3\n    //   );\n    // });\n  }\n}\n/* ------ text animation ------ */\nconst textAnime = (nodes) => {\n  var tl = gsap.timeline();\n  tl.fromTo(\n    nodes,\n    1,\n    { y: '100%', opacity: 0 },\n    {\n      y: 0,\n      opacity: 1,\n      stagger: 0.3,\n    },\n  );\n};\n\nfunction fullPage() {\n  new fullpage('#fullpage', {\n    licenseKey: 'YOUR KEY HERE',\n    lockAnchors: false,\n    // anchors: ['page-1', 'page-2', 'page-3', 'page-4', 'page-5', 'page-6'],\n    navigation: true,\n    showActiveTooltip: true,\n    navigationPosition: 'left',\n    // scrollOverflow: true,\n    scrollingSpeed: 1500,\n    normalScrollElements: '.scrollable-content',\n    onLeave: function (index, nextIndex, direction) {\n      if (getNode('.video-solution')) {\n        getNode('.video-solution').play();\n      }\n      if (getNode('.bad-grid')) {\n        getNode('.bad-grid').play();\n      }\n      if (getNode('.off-grid')) {\n        getNode('.off-grid').play();\n      }\n      if (getNode('.benefits')) {\n        getNode('.video-benefits').play();\n      }\n\n      /* --------full page------ */\n\n      if (nextIndex.index == 3) {\n        problemAnimate();\n      }\n      if (nextIndex.index == 5 && direction == 'down') {\n        benefitsAnimation();\n      }\n      if (direction == 'down') {\n        if (getNode('.main-page')) {\n          textAnime('.home .animate-text span');\n          textAnime('.home-about .animate-text span');\n          textAnime('.market .animate-text span');\n          textAnime('.problem .animate-text span');\n          textAnime('.solution .animate-text span');\n          solutionAnimate();\n        } else if (getNode('.about-page')) {\n          textAnime('.about .animate-text span');\n          textAnime('.agreement .animate-text span');\n          textAnime('.bmt .animate-text span');\n        } else if (getNode('.solution-page')) {\n          textAnime('.solution-m .animate-text span');\n          textAnime('.first .animate-text span');\n          textAnime('.second .animate-text span');\n          textAnime('.off .animate-text span');\n          textAnime('.off-solution .animate-text span');\n          textAnime('.benefits .animate-text span');\n        } else if (getNode('.partners-page')) {\n          textAnime('.first .animate-text span');\n          textAnime('.partners .animate-text span');\n          textAnime('.map .animate-text span');\n        }\n      }\n    },\n  });\n}\n\nfunction bmtSection() {\n  const duration = 0.5;\n  function mouseEnterBmtLeft(node) {\n    let tl = gsap.timeline();\n\n    tl.to(node, duration, { width: '490px' })\n      .to(`${node} .bmt-line__left-plus`, duration, { rotation: '-180' }, `-=${duration}`)\n      .to(`${node} .bmt-line__right-plus`, duration, { rotation: '180' }, `-=${duration}`);\n  }\n  function mouseOutBmtRight(node) {\n    let tl = gsap.timeline();\n    let bgLeft = CSSRulePlugin.getRule('.bmt .left::before');\n    let bgRight = CSSRulePlugin.getRule('.bmt .right::before');\n    tl.to(node, duration, {\n      width: '245px',\n    })\n      .to(`${node} .bmt-line__left-plus`, duration, { rotation: '0' }, `-=${duration}`)\n      .to(`${node} .bmt-line__right-plus`, duration, { rotation: '0' }, `-=${duration}`)\n      .to(bgLeft, duration, { backgroundColor: '#000000', opacity: 0.5 }, `-=${duration}`)\n      .to(bgRight, duration, { backgroundColor: '#000000', opacity: 0.5 }, `-=${duration}`)\n      .to('.bmt-line__left-textBottom', duration, { opacity: 0 }, `-=${duration}`)\n      .to('.bmt-line__right-textBottom', duration, { opacity: 0 }, `-=${duration}`);\n  }\n\n  let leftBtn = getNode('.left_btn');\n  let rightBtn = getNode('.right_btn');\n  if (getNode('.bmt')) {\n    // hover\n    leftBtn.addEventListener('mouseenter', () => {\n      mouseEnterBmtLeft('.bmt-line__left');\n      let bgLeft = CSSRulePlugin.getRule('.bmt .left::before');\n\n      gsap.to(bgLeft, duration, { backgroundColor: '#29B7B8', opacity: 0.7 }, `-=${duration}`);\n      gsap.to('.bmt-line__left-textBottom', duration, { opacity: 1 }, '0.5');\n    });\n    leftBtn.addEventListener('mouseout', () => {\n      mouseOutBmtRight('.bmt-line__left');\n    });\n\n    rightBtn.addEventListener('mouseenter', () => {\n      mouseEnterBmtLeft('.bmt-line__right');\n      let bgRight = CSSRulePlugin.getRule('.bmt .right::before');\n\n      gsap.to(bgRight, duration, { backgroundColor: '#29B7B8', opacity: 0.7 });\n      gsap.to('.bmt-line__right-textBottom', duration, { opacity: 1 });\n    });\n    rightBtn.addEventListener('mouseout', () => {\n      mouseOutBmtRight('.bmt-line__right');\n    });\n\n    let bmtSection = getNode('.bmt');\n    let bmtRowBtn = getNodes('.bmt-row__btn');\n\n    // on-click\n    rightBtn.addEventListener('click', function () {\n      addClass(bmtSection, 'active-left');\n      let tl = gsap.timeline();\n      tl.to('.bmt-row', duration, { visibility: 'visible' }).to('.bmt-row', duration, {\n        opacity: 1,\n      });\n    });\n\n    leftBtn.addEventListener('click', function () {\n      addClass(bmtSection, 'active-right');\n      let tl = gsap.timeline();\n      tl.to('.bmt-row', duration, { visibility: 'visible' }).to('.bmt-row', duration, {\n        opacity: 1,\n      });\n    });\n\n    bmtRowBtn[0].addEventListener('click', function () {\n      removeClass(bmtSection, 'active-left');\n\n      let tl = gsap.timeline();\n\n      tl.to('.bmt-row', duration, {\n        opacity: 0,\n      }).to('.bmt-row', duration, { visibility: 'hidden' });\n    });\n\n    bmtRowBtn[1].addEventListener('click', function () {\n      removeClass(bmtSection, 'active-right');\n\n      let tl = gsap.timeline();\n\n      tl.to('.bmt-row', duration, {\n        opacity: 0,\n      }).to('.bmt-row', duration, { visibility: 'hidden' });\n    });\n  }\n}\n\nfunction mapSection() {\n  if (getNode('.map')) {\n    let mapWorld = getNode('.map__world');\n    /* ------------ */\n    let csm = getNode('.csm_btn');\n    let csmAlert = getNode('.map-alert__csm');\n    let csmMap = getNode('.test_1');\n    /* ------------ */\n    let southEast = getNode('.south-east_btn');\n    let southEastAlert = getNode('.map-alert__africa2');\n    let southEastMap = getNode('.south-east_asia');\n\n    /* ------------ */\n    let china = getNode('.china');\n    let chinaAlert = getNode('.map-alert__asia1');\n    let chinamap = getNode('.south-china');\n    /* ------------ */\n    let asia2 = getNode('.asia2');\n    let asia2Alert = getNode('.map-alert__asia2');\n    let asia2map = getNode('.south-asia');\n    /* ------------ */\n    let india = getNode('.india');\n    let indiaAlert = getNode('.map-alert__india');\n    let indiaMap = getNode('.south-india');\n    /* ------------ */\n    let africa = getNode('.africa_btn');\n    let africaAlert = getNode('.map-alert__africa');\n    let africaMap = getNode('.africa');\n\n    function showMapAddress(node, alertNode, nodeMap, secondMap) {\n      node.addEventListener('click', function () {\n        addClass(alertNode, 'active');\n        addClass(nodeMap, 'active');\n        if (secondMap) {\n          addClass(secondMap, 'active');\n        }\n      });\n    }\n    showMapAddress(africa, africaAlert, africaMap);\n    showMapAddress(asia2, asia2Alert, asia2map, indiaMap);\n    showMapAddress(india, indiaAlert, indiaMap);\n    showMapAddress(china, chinaAlert, chinamap);\n    showMapAddress(southEast, southEastAlert, southEastMap);\n    showMapAddress(csm, csmAlert, csmMap);\n\n    function hiddenMap(nodeAlert, nodeMap) {\n      removeClass(nodeAlert, 'active');\n      removeClass(nodeMap, 'active');\n    }\n    mapWorld.addEventListener('click', function (e) {\n      if (africa != e.target) {\n        hiddenMap(africaAlert, africaMap);\n      }\n      if (csm != e.target) {\n        hiddenMap(csmAlert, csmMap);\n      }\n      if (southEast != e.target) {\n        hiddenMap(southEastAlert, southEastMap);\n      }\n      if (china != e.target) {\n        hiddenMap(chinaAlert, chinamap);\n      }\n      if (india == e.target) {\n        hiddenMap(asia2Alert, asia2map);\n      }\n\n      if (asia2 != e.target && india != e.target) {\n        hiddenMap(asia2Alert, asia2map);\n        hiddenMap(indiaAlert, indiaMap);\n      }\n    });\n  }\n}\n\nfunction destroyFullPage() {\n  fullpage_api.destroy('all');\n}\n\nconst textAnime2 = (nodes) => {\n  var tl = gsap.timeline();\n  tl.to(nodes, 0.5, {\n    y: 0,\n    opacity: 1,\n    stagger: 0.3,\n  });\n};\n\nconst scrollTop = 400;\nfunction getPosTop(node) {\n  return getNode(node).getBoundingClientRect().y < scrollTop;\n}\n\nfunction mobileScreen() {\n  window.addEventListener('scroll', function () {\n    // console.log(getNode(\".home-about\").getBoundingClientRect().y);\n\n    if (getNode('.main-page')) {\n      if (getPosTop('.home-about')) {\n        textAnime2('.home-about .animate-text span');\n        let homeAboutBG = CSSRulePlugin.getRule('.home-about .section-img::before');\n        gsap.to(homeAboutBG, 0.5, { width: 0 });\n      }\n      if (getPosTop('.market')) {\n        textAnime2('.market .animate-text span');\n        const node = CSSRulePlugin.getRule('.market-item__text::before');\n        gsap.to(node, 0.5, { width: '50%' });\n      }\n      if (getPosTop('.problem')) {\n        textAnime2('.problem .animate-text span');\n        let tl = gsap.timeline();\n        tl.to('.problem-text .bg', 1, { width: '0%' }, 2).to(\n          '.problem-category__item .bg',\n          1,\n          { width: '0%' },\n          '-=1',\n        );\n      }\n      if (getPosTop('.solution')) {\n        textAnime2('.solution .animate-text span');\n\n        function mouseEnterSolutionBtn() {\n          const duration = 0.5;\n          const leftLine = CSSRulePlugin.getRule('.solution .mob-md .line::before');\n          const rightLine = CSSRulePlugin.getRule('.solution .mob-md .line::after');\n          let tl = gsap.timeline();\n\n          tl.to(leftLine, duration, { width: '50%' }).to(\n            rightLine,\n            duration,\n            { width: '50%' },\n            `-=${duration}`,\n          );\n        }\n\n        function mouseOutSolutionBtn() {\n          const duration = 0.5;\n          const leftLine = CSSRulePlugin.getRule('.solution .line::before');\n          const rightLine = CSSRulePlugin.getRule('.solution .line::after');\n          let tl = gsap.timeline();\n          tl.to(leftLine, duration, { x: '-25%' }).to(\n            rightLine,\n            duration,\n            { x: '25%' },\n            `-=${duration}`,\n          );\n        }\n\n        let solutionBtn = getNode('.solution .mob-md .section-btn');\n\n        solutionBtn.addEventListener('mouseenter', mouseEnterSolutionBtn);\n        solutionBtn.addEventListener('mouseout', mouseOutSolutionBtn);\n      }\n    } else if (getNode('.about-page')) {\n      if (getPosTop('.about')) {\n        textAnime2('.about .animate-text span');\n      }\n      if (getPosTop('.about-slide')) {\n        textAnime2('.about-slide .animate-text span');\n      }\n      if (getPosTop('.animation-title')) {\n        textAnime2('.animation-title .animate-text span');\n      }\n      if (getPosTop('.agreement .first')) {\n        textAnime2('.agreement .first .animate-text span');\n      }\n\n      if (getPosTop('.agreement .second')) {\n        textAnime2('.agreement .second .animate-text span');\n      }\n\n      if (getPosTop('.agreement .three')) {\n        textAnime2('.agreement .three .animate-text span');\n      }\n\n      if (getPosTop('.agreement .four')) {\n        textAnime2('.agreement .four .animate-text span');\n      }\n      if (getPosTop('.bmt')) {\n        const sdg13Btn = getNode('.sdg13 .btn');\n        const sdg13 = getNode('.sdg13');\n        const sdg13BackBtn = getNode('.sdg13 .bmt-row__btn');\n\n        const sdg7Btn = getNode('.sdg7 .btn');\n        const sdg7 = getNode('.sdg7');\n        const sdg7BackBtn = getNode('.sdg7 .bmt-row__btn');\n\n        sdg13Btn.addEventListener('click', function () {\n          addClass(sdg13, 'active');\n          const tl = gsap.timeline();\n          tl.fromTo('.sdg13 .btn svg', 0.5, { rotation: '0deg' }, { rotation: '360deg' });\n        });\n        sdg13BackBtn.addEventListener('click', function () {\n          removeClass(sdg13, 'active');\n        });\n\n        sdg7Btn.addEventListener('click', function () {\n          addClass(sdg7, 'active');\n          const tl = gsap.timeline();\n          tl.fromTo('.sdg7 .btn svg', 0.5, { rotation: '0deg' }, { rotation: '360deg' });\n        });\n        sdg7BackBtn.addEventListener('click', function () {\n          removeClass(sdg7, 'active');\n        });\n      }\n    } else if (getNode('.solution-page')) {\n      if (getPosTop('.solution-m')) {\n        textAnime2('.solution-m .animate-text span');\n      }\n      if (getPosTop('.bad.first')) {\n        textAnime2('.bad.first .animate-text span');\n      }\n      if (getPosTop('.bad-solution.second')) {\n        textAnime2('.bad-solution.second .animate-text span');\n      }\n      if (getPosTop('.bad.off')) {\n        textAnime2('.bad.off .animate-text span');\n      }\n      if (getPosTop('.off-solution')) {\n        textAnime2('.off-solution .animate-text span');\n      }\n      if (getPosTop('.benefits')) {\n        textAnime2('.benefits .animate-text span');\n\n        // const duration = 0.5;\n\n        const bg = getNodes('.bg__white');\n        const textShow = getNodes('.benefits-item__text-show');\n        const textHidden = getNodes('.benefits-item__text-hidden');\n\n        for (let index = 0; index < bg.length; index++) {\n          textShow[index].style.transform = 'translateX(-200%)';\n          textHidden[index].style.transform = 'translateX(0)';\n        }\n        gsap.to('.bg__white', 0.5, { width: '0' }, 4);\n\n        // bg.style.width = \"100%\";\n        // textShow;\n        // let tl = gsap.timeline();\n        // tl.to(\".bg__white\", 0.5, { width: \"100%\" }, 3)\n        //   .to(\".benefits-item__text-show\", 0.5, { left: \"-150%\" })\n        //   .to(\".benefits-item__text-hidden\", 0.3, { opacity: 1 }, \"-=0.5\")\n        //   .to(\".bg__white\", duration, { width: 0 });\n      }\n    } else if (getNode('.partners-page')) {\n      if (getPosTop('.partners')) {\n        textAnime2('.partners .animate-text span');\n        const node = CSSRulePlugin.getRule('.partners-item__text::before');\n        gsap.to(node, 0.5, { width: '50%' });\n      }\n      if (getPosTop('.map')) {\n        textAnime2('.map .animate-text span');\n      }\n    }\n  });\n\n  // menu bureger\n  getNode('.menu-btn').addEventListener('click', function (params) {\n    getNode('.menu-btn').classList.toggle('active');\n    getNode('.mob-menu').classList.toggle('active');\n\n    let tl = gsap.timeline();\n    tl.fromTo(\n      '.mob-navabr li',\n      0.2,\n      { y: '-100%', opacity: 0 },\n      { y: '0', opacity: 1, stagger: 0.02 },\n      0.5,\n    );\n  });\n\n  const menu = getNodes('.mob-navabr li a');\n  for (let index = 0; index < menu.length; index++) {\n    menu[index].addEventListener('click', function (params) {\n      removeClass(getNode('.menu-btn', 'active'));\n      removeClass(getNode('.mob-menu', 'active'));\n    });\n  }\n}\n\nfunction init() {\n  fullPage();\n\n  aboutSlider();\n  agreementSlider();\n  bmtSection();\n\n  mapSection();\n  contactAnimation();\n\n  if (getNode('.about-page') || getNode('.partners-page')) {\n    addClass(getNode('body'), 'dark-dots');\n  }\n  if (window.innerWidth <= 1024) {\n    destroyFullPage();\n    mobileScreen();\n  }\n}\ninit();\n\nlet preloader = () => {\n  if (getNode('.preloader')) {\n    addClass(getNode('body'), 'addd');\n    gsap.to('body', 0.3, { overflow: 'hidden' });\n    history.scrollRestoration = 'manual';\n\n    if (history.scrollRestoration) {\n      history.scrollRestoration = 'manual';\n    } else {\n      window.onbeforeunload = function () {\n        window.scrollTo(0, 0);\n      };\n    }\n\n    fullpage_api.moveTo('page-1', 1);\n    fullpage_api.silentMoveTo('page-1', 1);\n    fullpage_api.setAllowScrolling(false);\n    let tl = gsap.timeline();\n    tl.to(\n      '.header__block',\n      0.1,\n      {\n        y: '-50px',\n      },\n      '-=1',\n    )\n      .to(\n        '.home video',\n        0.1,\n        {\n          filter: 'blur(15px)',\n        },\n        '-=1',\n      )\n      .to('.home .page-subtitle div', 0.1, {\n        y: '100%',\n      })\n      .to(\n        '.home .page-title div',\n        0.1,\n        {\n          y: '100%',\n        },\n        '-=1',\n      )\n      .to('.scroll', 0.1, {\n        opacity: 0,\n      });\n\n    let counter = 0;\n\n    let $counterNode = getNode('.preloader__counter'),\n      $preloaderNode = getNode('.preloader'),\n      bgPreloader = CSSRulePlugin.getRule('.preloader::before');\n\n    let i = setInterval(() => {\n      counter++;\n\n      $counterNode.textContent = `${counter}%`;\n      if (counter === 15) {\n        gsap.to(bgPreloader, 3, { opacity: 0 });\n      }\n      if (counter === 80) {\n        gsap.to(bgPreloader, 2, { opacity: 1 });\n        // gsap.fromTo('.navbar', 1, { y: -100 }, { y: 0 });\n      }\n      if (counter === 100) {\n        setTimeout(() => {\n          let tl = gsap.timeline();\n          tl.to($preloaderNode, 1, { opacity: 0 })\n            .to('.home video', 1, {\n              filter: 'blur(0px)',\n            })\n            .to(\n              '.header__block',\n              1,\n              {\n                y: 0,\n              },\n              '-=1',\n            )\n            .to('.home .page-subtitle div', 1, {\n              y: 0,\n            })\n            .to(\n              '.home .page-title div',\n              1,\n              {\n                y: 0,\n              },\n              '-=1',\n            )\n            .to('.scroll', 1, {\n              opacity: 1,\n            });\n\n          setTimeout(() => {\n            $preloaderNode.style.display = 'none';\n            fullpage_api.setAllowScrolling(true);\n            removeClass('body', 'addd');\n            gsap.to('body', 0.1, { overflow: 'visible' });\n            gsap.fromTo(' #fp-nav', 1, { opacity: 0 }, { opacity: 1 }, 1);\n          }, 1000);\n        }, 1500);\n        clearInterval(i);\n      }\n    }, 10);\n  }\n};\npreloader();\n\nconst swup = new Swup({\n  plugins: [\n    new SwupOverlayTheme({\n      color: '#151515',\n      duration: 1000,\n      direction: 'to-right',\n    }),\n  ],\n});\n\nswup.on('willReplaceContent', function () {\n  destroyFullPage();\n  if (getNode('.about-page') || getNode('.partners-page')) {\n    removeClass(getNode('body'), 'dark-dots');\n  }\n});\n\nswup.on('contentReplaced', function () {\n  /*  startFullPage(); */\n  init();\n});\n\n\n//# sourceURL=webpack://gulp-project/./app/js/index.js?")},"./app/js/modules/Helpers.js":
/*!***********************************!*\
  !*** ./app/js/modules/Helpers.js ***!
  \***********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NodeHelper\": () => (/* binding */ NodeHelper),\n/* harmony export */   \"FuncsHelper\": () => (/* binding */ FuncsHelper)\n/* harmony export */ });\nclass NodeHelper {\n\n    getNode = $node =>  document.querySelector($node)\n\n    getNodes = $nodes =>  document.querySelectorAll($nodes)\n\n    addClass = ($node, className = '') => {\n        if (typeof $node === 'string') {\n            const $element = this.getNode($node) \n            if ($element) {\n                $element.classList.add(className)\n            }\n            return ''\n        }\n        $node.classList.add(className)\n    }\n\n    removeClass = ($node, className = '') => {\n        if (typeof $node === 'string') {\n            const $element = this.getNode($node) \n            if ($element) {\n                $element.classList.remove(className)\n            }\n            return ''\n        }\n        $node.classList.remove(className)\n    }\n\n    nextNode = ($currentNode) => {\n        if (typeof $currentNode === 'string') {\n            const $element = this.getNode($currentNode) \n            if ($element) {\n                return $element.nextElementSibling\n            }\n        }\n        return $currentNode.nextElementSibling\n    }\n\n}\n\nclass FuncsHelper {\n\n    imgLoadHelper = () => {\n        const lazyImages = document.querySelectorAll('img[data-src],source[data-srcset]')\n        const windowHeight = document.documentElement.clientHeight\n    \n        let lazyImagesPositions = [];\n        if (lazyImages.length > 0) {\n            lazyImages.forEach(img => {\n                if (img.dataset.src || img.dataset.srcset) {\n                    lazyImagesPositions.push(img.getBoundingClientRect().top + pageYOffset)\n                    lazyScrollCheck()\n                }\n            })\n        }\n    \n        window.addEventListener('scroll', lazyScroll)\n    \n        function lazyScroll() {\n            if (lazyImages.length > 0) {\n                lazyScrollCheck()\n            }\n        }\n    \n        function lazyScrollCheck() {\n            let imgIndex = lazyImagesPositions.findIndex(\n                item => pageYOffset > item - windowHeight\n            )\n            if (imgIndex  >= 0) {\n                if (lazyImages[imgIndex].dataset.src) {\n                    lazyImages[imgIndex].src = lazyImages[imgIndex].dataset.src\n                    lazyImages[imgIndex].removeAttribute('data-src')\n                } else if (lazyImages[imgIndex].dataset.srcset) {\n                    lazyImages[imgIndex].srcset = lazyImages[imgIndex].dataset.srcset\n                    lazyImages[imgIndex].removeAttribute('data-srcset')\n                }\n                delete lazyImagesPositions[imgIndex]\n            }\n        }\n    }\n\n}\n\n\n\n\n//# sourceURL=webpack://gulp-project/./app/js/modules/Helpers.js?")}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;e=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n](e,e.exports,__webpack_require__),e.exports}__webpack_require__.d=(n,e)=>{for(var t in e)__webpack_require__.o(e,t)&&!__webpack_require__.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},__webpack_require__.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./app/js/index.js")})();